*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root,
[data-theme] {
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-bs: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-bs: #989eab;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html {
  -webkit-tap-highlight-color: transparent;
}

[class*="icon-[tabler--"] {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
}

.icon-\[tabler--adjustments-horizontal\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 6a2 2 0 1 0 4 0a2 2 0 1 0-4 0M4 6h8m4 0h4M6 12a2 2 0 1 0 4 0a2 2 0 1 0-4 0m-2 0h2m4 0h10m-5 6a2 2 0 1 0 4 0a2 2 0 1 0-4 0M4 18h11m4 0h1'/%3E%3C/svg%3E");
}

.icon-\[tabler--book\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0M3 6v13m9-13v13m9-13v13'/%3E%3C/svg%3E");
}

.icon-\[tabler--brand-google-filled\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M0 0h24v24H0z'/%3E%3Cpath fill='black' d='M12 2a9.96 9.96 0 0 1 6.29 2.226a1 1 0 0 1 .04 1.52l-1.51 1.362a1 1 0 0 1-1.265.06a6 6 0 1 0 2.103 6.836l.001-.004h-3.66a1 1 0 0 1-.992-.883L13 13v-2a1 1 0 0 1 1-1h6.945a1 1 0 0 1 .994.89c.04.367.061.737.061 1.11c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--brand-instagram\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 8a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4z'/%3E%3Cpath d='M9 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0m7.5-4.5v.01'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--brand-mastercard\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0'/%3E%3Cpath d='M12 9.765a3 3 0 1 0 0 4.47'/%3E%3Cpath d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--brand-telegram\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 10l-4 4l6 6l4-16l-18 7l4 2l2 6l3-4'/%3E%3C/svg%3E");
}

.icon-\[tabler--brand-whatsapp\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 21l1.65-3.8a9 9 0 1 1 3.4 2.9z'/%3E%3Cpath d='M9 10a.5.5 0 0 0 1 0V9a.5.5 0 0 0-1 0za5 5 0 0 0 5 5h1a.5.5 0 0 0 0-1h-1a.5.5 0 0 0 0 1'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--brand-x\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m4 4l11.733 16H20L8.267 4zm0 16l6.768-6.768m2.46-2.46L20 4'/%3E%3C/svg%3E");
}

.icon-\[tabler--category\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 4h6v6H4zm10 0h6v6h-6zM4 14h6v6H4zm10 3a3 3 0 1 0 6 0a3 3 0 1 0-6 0'/%3E%3C/svg%3E");
}

.icon-\[tabler--category-filled\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M0 0h24v24H0z'/%3E%3Cpath fill='black' d='M10 3H4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1m10 0h-6a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1M10 13H4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1m7 0a4 4 0 1 1-3.995 4.2L13 17l.005-.2A4 4 0 0 1 17 13'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--check\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
}

.icon-\[tabler--chevron-down\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/%3E%3C/svg%3E");
}

.icon-\[tabler--chevron-left\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 6l-6 6l6 6'/%3E%3C/svg%3E");
}

.icon-\[tabler--chevron-up\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 15l6-6l6 6'/%3E%3C/svg%3E");
}

.icon-\[tabler--circle-percentage\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m6 3.075l6-6m-6 .03v.015m6 6v.015'/%3E%3C/svg%3E");
}

.icon-\[tabler--credit-card-filled\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M0 0h24v24H0z'/%3E%3Cpath fill='black' d='M22 10v6a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4v-6zM7.01 14H7a1 1 0 1 0 .01 2a1 1 0 0 0 0-2M13 14h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2m5-10a4 4 0 0 1 4 4H2a4 4 0 0 1 4-4z'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--device-mobile-filled\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M0 0h24v24H0z'/%3E%3Cpath fill='black' d='M16 2a3 3 0 0 1 2.995 2.824L19 5v14a3 3 0 0 1-2.824 2.995L16 22H8a3 3 0 0 1-2.995-2.824L5 19V5a3 3 0 0 1 2.824-2.995L8 2zm-4 14a1 1 0 0 0-.993.883L11 17l.007.127a1 1 0 0 0 1.986 0L13 17.01l-.007-.127A1 1 0 0 0 12 16m1-12h-2l-.117.007a1 1 0 0 0 0 1.986L11 6h2l.117-.007a1 1 0 0 0 0-1.986z'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--discount\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m9 15l6-6'/%3E%3Ccircle cx='9.5' cy='9.5' r='.5' fill='black'/%3E%3Ccircle cx='14.5' cy='14.5' r='.5' fill='black'/%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--dots-vertical\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0 7a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0-14a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/svg%3E");
}

.icon-\[tabler--heart\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19.5 12.572L12 20l-7.5-7.428A5 5 0 1 1 12 6.006a5 5 0 1 1 7.5 6.572'/%3E%3C/svg%3E");
}

.icon-\[tabler--home\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 12H3l9-9l9 9h-2M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7'/%3E%3Cpath d='M9 21v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--list-tree\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 6h11m-8 6h8m-5 6h5M5 6v.01M8 12v.01M11 18v.01'/%3E%3C/svg%3E");
}

.icon-\[tabler--login\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M21 12H8l3-3m0 6l-3-3'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--logout\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M9 12h12l-3-3m0 6l3-3'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--menu-2\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E");
}

.icon-\[tabler--receipt-rupee\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16l-3-2l-2 2l-2-2l-2 2l-2-2z'/%3E%3Cpath d='M15 7H9h1a3 3 0 0 1 0 6H9l3 3m-3-6h6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--search\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m18 11l-6-6'/%3E%3C/svg%3E");
}

.icon-\[tabler--settings\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066-2.573c-.94-1.543.826-3.31 2.37-2.37c1 .608 2.296.07 2.572-1.065'/%3E%3Cpath d='M9 12a3 3 0 1 0 6 0a3 3 0 0 0-6 0'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--share\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0m12-6a3 3 0 1 0 6 0a3 3 0 1 0-6 0m0 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0m-6.3-7.3l6.6-3.4m-6.6 6l6.6 3.4'/%3E%3C/svg%3E");
}

.icon-\[tabler--shopping-bag-discount\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12.5 21H8.574a3 3 0 0 1-2.965-2.544l-1.255-8.152A2 2 0 0 1 6.331 8H17.67a2 2 0 0 1 1.977 2.304l-.416 2.7'/%3E%3Cpath d='M9 11V6a3 3 0 0 1 6 0v5m1 10l5-5m0 5v.01M16 16v.01'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--transfer\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 10H4l5.5-6M4 14h16l-5.5 6'/%3E%3C/svg%3E");
}

.icon-\[tabler--trash\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
}

.icon-\[tabler--user\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E");
}

.icon-\[tabler--user-filled\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M0 0h24v24H0z'/%3E%3Cpath fill='black' d='M12 2a5 5 0 1 1-5 5l.005-.217A5 5 0 0 1 12 2m2 12a5 5 0 0 1 5 5v1a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-1a5 5 0 0 1 5-5z'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--x\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/%3E%3C/svg%3E");
}

.icon-\[tabler--xbox-x\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 21a9 9 0 0 0 9-9a9 9 0 0 0-9-9a9 9 0 0 0-9 9a9 9 0 0 0 9 9M9 8l6 8m0-8l-6 8'/%3E%3C/svg%3E");
}

:root {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --rounded-box: 0.5rem ;
    --rounded-btn: 0.375rem;
    --rounded-tooltip: 0.25rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 57.5934% 0.247012 287.240256;
    --pc: 93.7482% 0.032368 291.504163;
    --s: 55.7871% 0.022138 301.905408;
    --sc: 100% 0 0;
    --a: 62.3083% 0.188015 259.814527;
    --ac: 93.1918% 0.031591 255.585479;
    --n: 65.7482% 0.022235 294.952787;
    --nc: 18.5128% 0.016696 301.919165;
    --b1: 26.8442% 0.028285 299.769973;
    --b2: 22.6865% 0.023344 295.952775;
    --b3: 39.9632% 0.030791 300.243852;
    --bc: 78.094% 0.014175 295.24394;
    --bs: 18.5128% 0.016696 301.919165;
    --in: 71.4837% 0.125737 215.220903;
    --inc: 95.6262% 0.044329 203.387778;
    --su: 73.1062% 0.216656 147.043973;
    --suc: 96.444% 0.02867 172.082912;
    --wa: 79.8713% 0.164239 73.09399;
    --wac: 98.4165% 0.02418 94.061776;
    --er: 65.3932% 0.222085 25.863858;
    --erc: 97.5752% 0.015143 61.349242;
  }
}

[data-theme=light] {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

[data-theme=dark] {
  color-scheme: dark;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 100% 0 0;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 65.7482% 0.022235 294.952787;
  --nc: 18.5128% 0.016696 301.919165;
  --b1: 26.8442% 0.028285 299.769973;
  --b2: 22.6865% 0.023344 295.952775;
  --b3: 39.9632% 0.030791 300.243852;
  --bc: 78.094% 0.014175 295.24394;
  --bs: 18.5128% 0.016696 301.919165;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

html,
  * {
  font-family: "Vazirmatn";
  font-size: 14px;
  line-height: 24px;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.avatar {
  position: relative;
  display: inline-flex;
  font-size: 1rem;
  line-height: 1.375rem;
}

.avatar > div {
  display: block;
  aspect-ratio: 1 / 1;
  overflow: hidden;
}

.avatar img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.pull-up .avatar {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
  transition-duration: 150ms;
  transition-duration: 0.25s;
}

.pull-up .avatar:hover {
  z-index: 30;
  --tw-translate-y: -0.25rem;
  --tw-scale-x: 1.02;
  --tw-scale-y: 1.02;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.breadcrumbs {
  max-width: 100%;
  overflow-x: auto;
}

.breadcrumbs > ul,
  .breadcrumbs > ol {
  display: flex;
  align-items: center;
  white-space: nowrap;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  line-height: 1.5rem;
  min-height: -moz-min-content;
  min-height: min-content;
}

.breadcrumbs > ul .breadcrumbs-separator, .breadcrumbs > ol .breadcrumbs-separator {
  display: inline-flex;
  width: 1.5rem;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.breadcrumbs > ul > li, .breadcrumbs > ol > li {
  display: inline-flex;
  align-items: center;
  line-height: 22px;
}

.breadcrumbs > ul > li > a, .breadcrumbs > ol > li > a {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
}

.breadcrumbs > ul > li > a:hover, .breadcrumbs > ol > li > a:hover {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.breadcrumbs > ul > li:last-child, .breadcrumbs > ol > li:last-child {
  cursor: text;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.btn {
  display: inline-flex;
  height: 2.375rem;
  min-height: 2.375rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  gap: 0.5rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-color: currentColor;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
}

.btn-square {
  height: 2.375rem;
  width: 2.375rem;
  padding: 0px;
}

.btn-circle {
  height: 2.375rem;
  width: 2.375rem;
  border-radius: 9999px;
  padding: 0px;
}

:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

@media (min-width: 640px) {
  .modal-dialog {
    max-width: 32rem;
  }
}

.active.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.checkbox {
  flex-shrink: 0;
  --chkbg: var(--fallback-n,oklch(var(--n)/1));
  --chkfg: var(--fallback-nc,oklch(var(--nc)/1));
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1.5px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.collapse:not(td):not(tr):not(colgroup) {
  visibility: visible;
}

.divider {
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  font-size: 0.875rem;
  line-height: 1.25rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 1rem;
  white-space: nowrap;
}

.divider::before {
  height: 1px;
  width: 100%;
  flex-grow: 1;
  border-top-width: 1px;
  --tw-content: '';
  content: var(--tw-content);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.divider::after {
  display: flex;
  height: 1px;
  width: 100%;
  flex-grow: 1;
  border-top-width: 1px;
  --tw-content: '';
  content: var(--tw-content);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.drawer {
  position: fixed;
  z-index: 80;
  display: flex;
  width: 100%;
  height: 100%;
  max-width: 24rem;
  flex-direction: column;
  justify-content: space-between;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.drawer-title {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.drawer-body {
  flex-grow: 1;
  overflow-y: auto;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  overflow-x: hidden;
}

.drawer-body::-webkit-scrollbar {
  width: 0.5rem;
}

.drawer-body:last-child {
  padding-bottom: 1.5rem;
}

.drawer-footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.5rem;
}

.dropdown-menu {
  z-index: 10;
  margin-top: 0.5rem;
  text-wrap: nowrap;
  padding: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  opacity: 0;
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.dropdown-item {
  clear: both;
  display: flex;
  width: 100%;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: inherit;
  border-radius: var(--rounded-btn, 0.375rem);
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
  text-decoration-thickness: 0px;
}

.dropdown-header,
.dropdown-footer {
  position: static;
  display: flex;
  align-items: center;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-header {
  margin: -0.5rem;
  margin-bottom: 0.5rem;
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-width: 1px;
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2.5rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.footer > * {
  display: grid;
  place-items: start;
  gap: 0.75rem;
}

@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }

  .footer-center {
    grid-auto-flow: row dense;
  }
}

.label:where(:not(.label-text)) {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.input {
  height: 2.375rem;
  width: 100%;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input::file-selector-button {
  margin-inline-end: 1rem;
  display: inline-flex;
  height: 100%;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1em;
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  border-width: 0px;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  font-weight: 600;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: -0.25rem;
}

.input-lg[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: 0.75rem;
}

.input[type="file"] {
  padding-left: 0px;
  padding-right: 0px;
}

.link {
  display: inline-block;
  cursor: pointer;
  text-decoration-line: underline;
}

.link-hover {
  text-decoration-line: none;
}

@media (hover:hover) {
  .link-hover:hover {
    text-decoration-line: underline;
  }

  .label a:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  }

  .menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }

  .tabs-bordered > .tab:hover {
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }

  .tabs-lifted > .tab:hover {
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}

.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 0.125rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding: 0.5rem;
}

.menu :where(li ul) {
  position: relative;
  white-space: nowrap;
}

.menu :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.menu li) .badge {
  justify-self: end;
}

.modal {
  pointer-events: none;
  position: fixed;
  inset: 0px;
  z-index: 80;
  margin: 0px;
  display: grid;
  width: 100%;
  height: 100%;
  justify-items: center;
  padding: 1rem;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.modal-dialog {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.modal-content {
  pointer-events: auto;
  display: flex;
  flex-direction: column;
  border-radius: 0.5rem;
  max-height: calc(100vh - 2rem);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 20px 25px -6px var(--fallback-bs,oklch(var(--bs)/0.38));
  --tw-shadow-colored: 0 20px 25px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 300ms;
  overscroll-behavior: contain;
}

.modal-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
}

.modal-title {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.modal-body {
  overflow-y: auto;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  overflow-x: hidden;
  padding: 1.5rem;
}

.modal-body::-webkit-scrollbar {
  width: 0.5rem;
}

.modal-footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.5rem;
}

.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, 0.75rem 1.5rem);
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.navbar-start {
  display: flex;
  width: 50%;
  justify-content: flex-start;
}

.navbar-end {
  display: flex;
  width: 50%;
  justify-content: flex-end;
}

.pin-input {
  width: 2.375rem;
  height: 2.375rem;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.switch {
  flex-shrink: 0;
  --tglbg: var(--fallback-b3,oklch(var(--b3)/1));
  --handleoffset: 1.35rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --switchhandleborder: 0 0;
  height: 1.5rem;
  width: 2.875rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  overflow: hidden;
  border-radius: 9999px;
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  transition: background,
    box-shadow var(--animation-input, 0.2s) ease-out;
  box-shadow: var(--handleoffsetcalculator) 0 0 4px var(--tglbg) inset,
    0 0 0 4px var(--tglbg) inset,
    var(--switchhandleborder);
}

.tabs {
  display: flex;
  align-items: flex-end;
}

.tabs-lifted:has(.tab-content[class^="rounded-"]) .tab:first-child:not(.tab-active),
  .tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active) {
  border-bottom-color: transparent;
}

.tab {
  position: relative;
  display: inline-flex;
  height: 2.375rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  --tab-padding: 1rem;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tab-bg: var(--fallback-b1,oklch(var(--b1)/1));
  --tab-border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
}

.accordion-toggle {
  width: 100%;
  cursor: pointer;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.accordion-toggle:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.accordion-shadow :where(.accordion-item) {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type {
  margin-top: 0px;
}

.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type {
  margin-bottom: 0px;
}

.accordion-shadow :where(.accordion-item) > *:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.accordion-shadow :where(.accordion-item) > *:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

.accordion:where(.accordion-bordered) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.accordion:where(.accordion-bordered) {
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.advance-select-option.active,
  .advance-select-option:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.validate .label:has(~ .advance-select > select:valid) > *,
.validate .label-text:has(~ .advance-select > select:valid),

.validate .advance-select:has(> select:valid) ~ .label,
.validate .advance-select:has(> select:valid) ~ .label-text,
.validate .advance-select:has(> select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(~ * > select:invalid) > *,
.validate .label-text:has(~ * > select:invalid),

.validate .advance-select:has( > select:invalid) ~ .label,
.validate .advance-select:has(> select:invalid) ~ .label-text,
.validate .advance-select:has( > select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate .label ~ *:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ .success-message {
  display: block;
}

.validate .label ~ *:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ .error-message {
  display: block;
}

.avatar-group :where(.avatar) img {
  height: 100%;
  width: 100%;
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
  -o-object-fit: cover;
     object-fit: cover;
}

.avatar-group :where(.avatar).placeholder > div {
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
}

.breadcrumbs > ul > li > a:focus, .breadcrumbs > ol > li > a:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.breadcrumbs > ul > li > a:focus-visible, .breadcrumbs > ol > li > a:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

@media (prefers-reduced-motion: no-preference) {
  .btn {
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
  }
}

.btn:active:hover,
  .btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0% 0 0)) {
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn:focus-visible {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn-primary {
    --btn-color: var(--fallback-p);
  }

  .btn-success {
    --btn-color: var(--fallback-su);
  }

  .btn-error {
    --btn-color: var(--fallback-er);
  }
}

@media (hover: hover) {
  .btn:hover {
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .btn-soft:hover {
    background-color: var(--fallback-n,oklch(var(--n)/0.3));
  }

  .btn-soft.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.3));
  }

  .btn-soft.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.3));
  }

  .btn-soft.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.3));
  }

  .btn-soft.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.3));
  }

  .btn-soft.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.3));
  }

  .btn-soft.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  }

  .btn-soft.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.3));
  }

  .btn-outline:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  }

  .btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-outline.btn-secondary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-outline.btn-accent:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-a,oklch(var(--a)/0.1));
  }

  .btn-outline.btn-success:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-su,oklch(var(--su)/0.1));
  }

  .btn-outline.btn-info:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-in,oklch(var(--in)/0.1));
  }

  .btn-outline.btn-warning:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
  }

  .btn-outline.btn-error:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-text:hover {
    border-color: transparent;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  }

  .btn-text.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-text.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-text.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.1));
  }

  .btn-text.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.1));
  }

  .btn-text.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.1));
  }

  .btn-text.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
  }

  .btn-text.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn.disabled:hover,
    .btn:disabled:hover {
    opacity: 0.5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0 0 0)) {
    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
      background-color: var(--fallback-n,oklch(var(--n)/0.1));
    }
  }

  .tab[disabled]:hover {
    pointer-events: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
    --tw-text-opacity: 0.4;
  }
}

@supports (color: color-mix(in oklab, black, black)) {
  .btn:focus-visible {
    background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
    border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black);
  }
}

.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
}

.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

@supports (color: oklch(0% 0 0)) {
  .btn-primary {
    --btn-color: var(--p);
  }

  .btn-success {
    --btn-color: var(--su);
  }

  .btn-error {
    --btn-color: var(--er);
  }

  .btn-gradient.btn-primary {
    --light-shade: var(--p);
  }

  .btn-gradient.btn-success {
    --light-shade: var(--su);
  }

  .btn-gradient.btn-error {
    --light-shade: var(--er);
  }
}

.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.btn.glass:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn-soft {
  border-style: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft.btn-active {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.btn-soft:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
  outline-color: var(--fallback-n,oklch(var(--n)/0.5));
}

.btn-soft.btn-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.btn-soft.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.btn-soft.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-accent {
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.btn-soft.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.btn-soft.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.btn-soft.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.btn-soft.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-soft.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn-soft.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-outline {
  border-style: solid;
  border-color: currentColor;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-outline:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-outline.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.btn-outline:focus-visible {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-width: 1px;
  outline-color: currentColor;
}

.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-secondary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-outline.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-outline.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-accent.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-outline.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-outline.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-success.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-outline.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-outline.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-info.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-outline.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-outline.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-warning.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-outline.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-outline.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-error.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-outline.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-text {
  border-color: transparent;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-text:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-text.btn-active {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.btn-text:focus-visible {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-color: currentColor;
}

.btn-text.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-text.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-text.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-text.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-text.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-text.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-text.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-text.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-text.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-text.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-gradient.btn-primary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:hover {
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-success {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-success:hover {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-success:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-error {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-error:hover {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-error:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
  border-color: transparent;
}

.btn.btn-disabled,
  .btn.disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
  opacity: 0.5;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.checkbox:focus {
  box-shadow: none;
}

.checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  border-color: var(--chkbg);
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-color: var(--chkbg);
  background-image: linear-gradient(-45deg, transparent 66%, var(--chkbg) 66.99%),
      linear-gradient(45deg, transparent 77%, var(--chkbg) 77.99%),
      linear-gradient(-45deg, var(--chkbg) 41%, transparent 41.99%),
      linear-gradient(45deg, var(--chkbg) 34%, var(--chkfg) 34.99%, var(--chkfg) 40%, transparent 40.99%),
      linear-gradient(-45deg, var(--chkfg) 47%, var(--chkbg) 47.99%);
}

.checkbox:indeterminate {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  background-color: var(--chkbg);
  border-color: var(--chkbg);
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(0deg, var(--chkbg) 45%, var(--chkfg) 45%, var(--chkfg) 55%, var(--chkbg) 55%);
}

.checkbox-primary {
  --chkbg: var(--fallback-p,oklch(var(--p)/1));
  --chkfg: var(--fallback-pc,oklch(var(--pc)/1));
}

.checkbox-primary:checked:focus-visible, .checkbox-primary[checked="true"]:focus-visible, .checkbox-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.checkbox.disabled,
  .checkbox:disabled,
  .checkbox[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  opacity: 0.4;
}

.checkbox.disabled:not(checked), .checkbox:disabled:not(checked), .checkbox[disabled]:not(checked) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

.checkbox.is-valid,
.validate .checkbox:valid {
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-valid:focus-visible, .validate .checkbox:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.checkbox.is-invalid,
.validate .checkbox:invalid {
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-invalid:focus-visible, .validate .checkbox:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.validate .label:has(+ * .checkbox:valid) > *, 
.validate .label-text:has(+ * .checkbox:valid), 
.validate .label-text:has(~ .checkbox:valid), 
.validate .label:has(~ .checkbox:valid) > *, 

.validate .checkbox:valid ~ .label, 
.validate .checkbox:valid ~ .label-text, 
.validate .checkbox:valid ~ .label .label-text,  
.validate *:has(.checkbox:valid) ~ .label, 
.validate *:has(.checkbox:valid) ~ .label-text, 
.validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .checkbox:invalid) > *, 
.validate .label-text:has(+ * .checkbox:invalid), 
.validate .label-text:has(~ .checkbox:invalid), 
.validate .label:has(~ .checkbox:invalid) > *, 

.validate .checkbox:invalid ~ .label, 
.validate .checkbox:invalid ~ .label-text, 
.validate .checkbox:invalid ~ .label .label-text,  
.validate *:has(.checkbox:invalid) ~ .label, 
.validate *:has(.checkbox:invalid) ~ .label-text, 
.validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .checkbox:valid) ~ .success-message,
.validate *:has(> .checkbox:valid) > * > .success-message,

.validate .checkbox:valid ~ .success-message,
.validate .checkbox:valid + * > .success-message {
  display: block;
}

.validate *:has(> .checkbox:invalid) ~ .error-message,
.validate *:has(> .checkbox:invalid) > * > .error-message,

.validate .checkbox:invalid ~ .error-message,
.validate .checkbox:invalid + * > .error-message {
  display: block;
}

.nested-collapse-wrapper .collapse.open.nested-collapse,
.nested-collapse-wrapper .collapse-toggle.open.nested-collapse {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.nested-collapse-wrapper .collapse.open > .collapse-icon,
.nested-collapse-wrapper .collapse-toggle.open > .collapse-icon {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.divider:not(:empty) {
  gap: 1rem;
}

.drawer-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
}

.drawer-body::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.drawer-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.drawer-body::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.dropdown-menu > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.dropdown-item:hover,
  .dropdown-item:focus,
  .dropdown-item:focus-within,
  .dropdown-item:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown-item.active,
  .dropdown-item:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.dropdown-item.disabled,
  .dropdown-item:disabled,
  .dropdown-item[disabled] {
  pointer-events: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.dropdown-item > .label {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-item > .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.label {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding: 0.25rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.label-text {
  display: block;
  cursor: pointer;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

input {
  background-color: transparent;
}

input:focus {
  outline-width: 0px;
  outline-color: transparent;
}

input:focus-visible {
  outline: unset;
}

.input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input[type="file"]:disabled {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.input:focus,
  .input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input:-webkit-autofill,
  .input:-webkit-autofill:focus {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.input-floating::-moz-placeholder {
  color: transparent;
}

.input-floating::placeholder {
  color: transparent;
}

.input-floating:focus::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-floating:focus::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.input.disabled,
  .input:disabled,
  .input[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.input.input-floating.disabled,
    .input.input-floating:disabled,
    .input.input-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.input-floating.disabled ~ .input-floating-label, .input.input-floating:disabled ~ .input-floating-label, .input.input-floating[disabled] ~ .input-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input.input-filled.disabled,
    .input.input-filled:disabled,
    .input.input-filled[disabled] {
  border-bottom-width: 1px;
}

.input.input-filled.disabled ~ .input-filled-label, .input.input-filled:disabled ~ .input-filled-label, .input.input-filled[disabled] ~ .input-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled-label,
.input-floating-label {
  pointer-events: none;
  position: absolute;
  inset-inline-start: 0px;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  background-color: transparent;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
  transition-duration: 150ms;
}

.peer:focus ~ .input-filled-label,.peer:focus ~ 
.input-floating-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.peer.input-lg ~ .input-filled-label,.peer.input-lg ~ 
.input-floating-label {
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.peer.input-sm ~ .input-filled-label,.peer.input-sm ~ 
.input-floating-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer.input-lg ~ .input-filled-label {
  top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.peer.input-sm ~ .input-filled-label {
  top: 0.625rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.peer:not(:-moz-placeholder-shown) ~ .input-filled-label {
  top: 0.125rem;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer:focus ~ .input-filled-label,
  .peer:focus-within ~ .input-filled-label,
  .peer:not(:placeholder-shown) ~ .input-filled-label {
  top: 0.125rem;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer.input-lg:not(:-moz-placeholder-shown) ~ .input-filled-label {
  margin-inline-start: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer.input-lg:focus ~ .input-filled-label,
  .peer.input-lg:focus-within ~ .input-filled-label,
  .peer.input-lg:not(:placeholder-shown) ~ .input-filled-label {
  margin-inline-start: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input.input-filled.input-sm:not(:-moz-placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled.input-sm:focus,
  .input.input-filled.input-sm:not(:placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled:not(:-moz-placeholder-shown), .input.input-filled.input-lg:not(:-moz-placeholder-shown) {
  padding-top: 0.75rem;
}

.input.input-filled:focus,
  .input.input-filled.input-lg:focus,
  .input.input-filled:not(:placeholder-shown),
  .input.input-filled.input-lg:not(:placeholder-shown) {
  padding-top: 0.75rem;
}

.input-floating-label {
  top: 0.5rem;
}

.peer.input-lg ~ .input-floating-label {
  top: 0.7rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.peer.input-sm ~ .input-floating-label {
  top: 0.3rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.peer:not(:-moz-placeholder-shown) ~ .input-floating-label {
  top: 0px;
  margin-inline-start: 0.5rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer:focus ~ .input-floating-label,
  .peer:focus-within ~ .input-floating-label,
  .peer:not(:placeholder-shown) ~ .input-floating-label {
  top: 0px;
  margin-inline-start: 0.5rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer.input-lg:not(:-moz-placeholder-shown) ~ .input-floating-label {
  margin-inline-start: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer.input-lg:focus ~ .input-floating-label,
  .peer.input-lg:focus-within ~ .input-floating-label,
  .peer.input-lg:not(:placeholder-shown) ~ .input-floating-label {
  margin-inline-start: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-group {
  position: relative;
  display: flex;
  width: 100%;
  align-items: stretch;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input-group:has(:hover) {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input-group:has(:focus),
  .input-group:has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input-group:has(input.disabled),
  .input-group:has(input:disabled),
  .input-group:has(input[disabled]) {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-group .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group .input:focus,
    .input-group .input:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input-group .input.disabled,
    .input-group .input:disabled,
    .input-group .input[disabled] {
  background-color: transparent;
}

.input-group-filled .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group-filled .input.disabled,
    .input-group-filled .input:disabled,
    .input-group-filled .input[disabled] {
  background-color: transparent;
}

.input-group-text {
  display: flex;
  align-items: center;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input-group-text:first-child {
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  padding-inline-end: 0px;
}

.input-group-text:last-child {
  border-start-end-radius: var(--rounded-btn, 0.375rem);
  border-end-end-radius: var(--rounded-btn, 0.375rem);
  padding-inline-start: 0px;
}

.input[type="file"].input-floating::file-selector-button {
  border-inline-end-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.is-valid,
.validate .input:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input.is-valid:focus,
  .input.is-valid:focus-within,
  .validate .input:valid:focus,
  .validate .input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input.is-valid.input-filled:focus,
  .input.is-valid.input-filled:focus-within,
  .validate .input:valid.input-filled:focus,
  .validate .input:valid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input.is-valid ~ .input-floating-label,
  .input.is-valid ~ .input-filled-label,
  .validate .input:valid ~ .input-floating-label,
  .validate .input:valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-valid:focus ~ .input-filled-focused,
  .input.is-valid:focus-within ~ .input-filled-focused,
  .validate .input:valid:focus ~ .input-filled-focused,
  .validate .input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.label:has(+ * .is-valid) > *, 
.label-text:has(+ * .is-valid), 
.label-text:has(~ .is-valid), 
.label:has(~ .is-valid) > *, 


.is-valid ~ .label, 
.is-valid ~ .label-text, 
.is-valid ~ .label .label-text,  
*:has(.is-valid) ~ .label, 
*:has(.is-valid) ~ .label-text, 
*:has(.is-valid) ~ .label .label-text, 



.validate .label:has(+ * .input:valid) > *, 
.validate .label-text:has(+ * .input:valid), 
.validate .label-text:has(~ .input:valid), 
.validate .label:has(~ .input:valid) > *, 


.validate .input:valid ~ .label, 
.validate .input:valid ~ .label.label-text, 
.validate .input:valid ~ .label .label-text,  
.validate *:has(.input:valid) ~ .label, 
.validate *:has(.input:valid) ~ .label-text, 
.validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input:focus.is-valid ~ .input-floating-label,
.input:focus.is-valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-invalid,
.validate .input:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input.is-invalid:focus,
  .input.is-invalid:focus-within,
  .validate .input:invalid:focus,
  .validate .input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input.is-invalid.input-filled:focus,
  .input.is-invalid.input-filled:focus-within,
  .validate .input:invalid.input-filled:focus,
  .validate .input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input.is-invalid ~ .input-floating-label,
  .input.is-invalid ~ .input-filled-label,
  .validate .input:invalid ~ .input-floating-label,
  .validate .input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input.is-invalid:focus ~ .input-filled-focused,
  .input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .input:invalid:focus ~ .input-filled-focused,
  .validate .input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.label:has(+ * .is-invalid) > *, 
.label-text:has(+ * .is-invalid), 
.label-text:has(~ .is-invalid), 
.label:has(~ .is-invalid) > *, 


.is-invalid ~ .label, 
.is-invalid ~ .label-text, 
.is-invalid ~ .label .label-text,  
*:has(.is-invalid) ~ .label, 
*:has(.is-invalid) ~ .label-text, 
*:has(.is-invalid) ~ .label .label-text, 



.validate .label:has(+ * .input:invalid) > *, 
.validate .label-text:has(+ * .input:invalid), 
.validate .label-text:has(~ .input:invalid), 
.validate .label:has(~ .input:invalid) > *, 


.validate .input:invalid ~ .label, 
.validate .input:invalid ~ .label.label-text, 
.validate .input:invalid ~ .label .label-text,  
.validate *:has(.input:invalid) ~ .label, 
.validate *:has(.input:invalid) ~ .label-text, 
.validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input:focus.is-invalid ~ .input-floating-label,
.input:focus.is-invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .input:valid) ~ .success-message,
.validate *:has(> .input:valid)  > * > .success-message,

.validate .input:valid ~ .success-message,
.validate .input:valid  + * > .success-message {
  display: block;
}

.validate *:has(> .input:invalid) ~ .error-message,
.validate *:has(> .input:invalid) > * > .error-message,

.validate .input:invalid ~ .error-message,
.validate .input:invalid + * > .error-message {
  display: block;
}

.validate .input-group > .input:valid,
.input-group > .input:valid,
.validate .input-group > .input:invalid,
.input-group > .input:invalid,
.validate .input-group > * > .input:valid,
.input-group > * > .input:valid,
.validate .input-group > * > .input:invalid,
.input-group > * > .input:invalid,
.input-group > .input.is-valid,
.input-group > .input.is-invalid,
.input-group > * > .input.is-valid,
.input-group > * > .input.is-invalid {
  border-width: 0px;
}

.validate .input-group > .input:valid:focus-within,
.input-group > .input:valid:focus-within,
.validate .input-group > .input:invalid:focus-within,
.input-group > .input:invalid:focus-within,
.validate .input-group > * > .input:valid:focus-within,
.input-group > * > .input:valid:focus-within,
.validate .input-group > * > .input:invalid:focus-within,
.input-group > * > .input:invalid:focus-within,
.input-group > .input.is-valid:focus-within,
.input-group > .input.is-invalid:focus-within,
.input-group > * > .input.is-valid:focus-within,
.input-group > * > .input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.validate .input-group > .input:valid:focus,
.input-group > .input:valid:focus,
.validate .input-group > .input:invalid:focus,
.input-group > .input:invalid:focus,
.validate .input-group > * > .input:valid:focus,
.input-group > * > .input:valid:focus,
.validate .input-group > * > .input:invalid:focus,
.input-group > * > .input:invalid:focus,
.input-group > .input.is-valid:focus,
.input-group > .input.is-invalid:focus,
.input-group > * > .input.is-valid:focus,
.input-group > * > .input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input-group:has(.is-valid),
  .validate .input-group:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-valid):has(:focus),
    .input-group:has(.is-valid):has(:focus-within),
    .validate .input-group:has(.input:valid):has(:focus),
    .validate .input-group:has(.input:valid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input-group:has(.is-invalid),
  .validate .input-group:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-invalid):has(:focus),
    .input-group:has(.is-invalid):has(:focus-within),
    .validate .input-group:has(.input:invalid):has(:focus),
    .validate .input-group:has(.input:invalid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input-group-filled:has(.is-valid),
  .validate .input-group-filled:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-valid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-valid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.input-group-filled:has(.is-invalid),
  .validate .input-group-filled:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-invalid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-invalid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.join .btn {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.join > :where(*:not(:first-child)):is(.btn) {
  margin-inline-start: calc(var(--border-btn) * -1);
}

.link-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

@supports (color:color-mix(in oklab,black,black)) {
  @media (hover:hover) {
    .link-primary:hover {
      color: color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 80%,black);
    }

    .link-neutral:hover {
      color: color-mix(in oklab,var(--fallback-n,oklch(var(--n)/1)) 80%,black);
    }
  }
}

.link-neutral {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.link.disabled,
  .link[disabled],
  .link:disabled {
  pointer-events: none;
  opacity: 0.4;
}

:where(.menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li:not(.dropdown) ul) {
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.menu :where(li:not(.dropdown) ul):before {
  position: absolute;
  bottom: 0.6rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  content: "";
}

.menu :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

.menu li.tooltip > * {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled)) {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn).focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.menu li.disabled,
.menu li:disabled,
.menu li[disabled] {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0.5;
}

.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-inline-start: 2rem;
  padding-top: 0.125rem;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  inset-inline-start: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  inset-inline-start: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

.open.modal {
  transition-duration: 500ms;
}

.open .modal {
  transition-duration: 500ms;
}

.modal::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.modal::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.modal::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.modal::-webkit-scrollbar {
  width: 0.5rem;
}

.open.modal-dialog {
  transition-duration: 500ms;
}

.open .modal-dialog {
  transition-duration: 500ms;
}

.modal-body::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.modal-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.modal-body::-webkit-scrollbar-track {
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

:where(.modal-header) + .modal-body {
  padding-top: 0;
}

:where(.modal-body) + .modal-footer {
  padding-top: 0;
}

.pin-input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.pin-input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.pin-input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.pin-input:focus,
  .pin-input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.pin-input.disabled,
  .pin-input:disabled,
  .pin-input[disabled] {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.pin-input.disabled::-moz-placeholder, .pin-input:disabled::-moz-placeholder, .pin-input[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}

.pin-input.disabled::placeholder,
  .pin-input:disabled::placeholder,
  .pin-input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}

@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }

  50% {
    background-position-x: 125%;
  }

  100% {
    background-position-x: -75%;
  }
}

@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 9px var(--basebg) inset,
      0 0 0 9px var(--basebg) inset;
  }

  50% {
    box-shadow: 0 0 0 6px var(--basebg) inset,
      0 0 0 6px var(--basebg) inset;
  }

  100% {
    box-shadow: 0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset;
  }
}

@keyframes radioinsetmark {
  0% {
    border-width: 2px;
  }

  50% {
    border-width: 4px;
  }

  100% {
    border-width: 6px;
  }
}

.custom-label-option .label, .custom-option .label {
  padding: 0px;
  font-size: 1rem;
  line-height: 1.375rem;
}

.custom-label-option .label:first-of-type, .custom-option .label:first-of-type {
  padding-bottom: 0.25rem;
}

.custom-label-option .label .label-text, .custom-option .label .label-text {
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .radio:valid) > *, 
.validate .label-text:has(+ * .radio:valid), 
.validate .label-text:has(~ .radio:valid), 
.validate .label:has(~ .radio:valid) > *, 

.validate .radio:valid ~ .label, 
.validate .radio:valid ~ .label-text, 
.validate .radio:valid ~ .label .label-text,  
.validate *:has(.radio:valid) ~ .label, 
.validate *:has(.radio:valid) ~ .label-text, 
.validate *:has(.radio:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .radio:invalid) > *, 
.validate .label-text:has(+ * .radio:invalid), 
.validate .label-text:has(~ .radio:invalid), 
.validate .label:has(~ .radio:invalid) > *, 

.validate .radio:invalid ~ .label, 
.validate .radio:invalid ~ .label-text, 
.validate .radio:invalid ~ .label .label-text,  
.validate *:has(.radio:invalid) ~ .label, 
.validate *:has(.radio:invalid) ~ .label-text, 
.validate *:has(.radio:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .radio-inset:valid) > *, 
.validate .label:has(+ * .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid) > *, 

.validate .radio-inset:valid ~ .label, 
.validate .radio-inset:valid ~ .label.label-text, 
.validate .radio-inset:valid ~ .label .label-text,  
.validate *:has(.radio-inset:valid) ~ .label, 
.validate *:has(.radio-inset:valid) ~ .label.label-text, 
.validate *:has(.radio-inset:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .radio-inset:invalid) > *, 
.validate .label-text:has(+ * .radio-inset:invalid), 
.validate .label-text:has(~ .radio-inset:invalid), 
.validate .label:has(~ .radio-inset:invalid) > *, 

.validate .radio-inset:invalid ~ .label, 
.validate .radio-inset:invalid ~ .label-text, 
.validate .radio-inset:invalid ~ .label .label-text,  
.validate *:has(.radio-inset:invalid) ~ .label, 
.validate *:has(.radio-inset:invalid) ~ .label-text, 
.validate *:has(.radio-inset:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input-group .select {
  border-width: 0px;
}

.input-group .select:focus,
    .input-group .select:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.validate .label:has(+ * .select:valid) > *, 
.validate .label-text:has(+ * .select:valid), 
.validate .label-text:has(~ .select:valid).label-text, 
.validate .label:has(~ .select:valid) > *, 

.validate .select:valid ~ .label, 
.validate .select:valid ~ .label-text, 
.validate .select:valid ~ .label .label-text,  
.validate *:has(.select:valid) ~ .label, 
.validate *:has(.select:valid) ~ .label-text, 
.validate *:has(.select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .select:invalid) > *, 
.validate .label-text:has(+ * .select:invalid), 
.validate .label-text:has(~ .select:invalid), 
.validate .label:has(~ .select:invalid) > *, 

.validate .select:invalid ~ .label, 
.validate .select:invalid ~ .label-text, 
.validate .select:invalid ~ .label .label-text,  
.validate *:has(.select:invalid) ~ .label, 
.validate *:has(.select:invalid) ~ .label-text, 
.validate *:has(.select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

@keyframes skeleton {
  from {
    background-position: 150%;
  }

  to {
    background-position: -50%;
  }
}

[dir="rtl"] .switch {
  --handleoffsetcalculator: calc(var(--handleoffset) * 1);
}

.switch:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.switch:checked,
  .switch[checked="true"],
  .switch[aria-checked="true"] {
  background-image: none;
  --handleoffsetcalculator: var(--handleoffset);
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

[dir="rtl"] .switch:checked, [dir="rtl"] .switch[checked="true"], [dir="rtl"] .switch[aria-checked="true"] {
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
}

.switch:indeterminate {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
  box-shadow: calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
      calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
      0 0 0 3px var(--tglbg) inset;
}

[dir="rtl"] .switch:indeterminate {
  box-shadow: calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
        calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
        0 0 0 3px var(--tglbg) inset;
}

.switch-primary:checked,
    .switch-primary[checked="true"],
    .switch-primary[aria-checked="true"] {
  --tglbg: var(--fallback-p,oklch(var(--p)/1));
}

.switch-primary:checked:focus-visible, .switch-primary[checked="true"]:focus-visible, .switch-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.switch.disabled,
  .switch:disabled,
  .switch[disabled] {
  pointer-events: none;
  background-color: transparent;
  opacity: 0.4;
}

.switch-outline.switch-primary:checked,
      .switch-outline.switch-primary[checked="true"],
      .switch-outline.switch-primary[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.switch-outline.switch-primary:checked:focus-visible, .switch-outline.switch-primary[checked="true"]:focus-visible, .switch-outline.switch-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.switch.is-valid,
.validate .switch:valid {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}

.switch.is-valid:focus-visible, .validate .switch:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.switch.is-valid:checked,
  .switch.is-valid[checked="true"],
  .switch.is-valid[aria-checked="true"],
  .validate .switch:valid:checked,
  .validate .switch:valid[checked="true"],
  .validate .switch:valid[aria-checked="true"] {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}

.switch.is-invalid,
.validate .switch:invalid {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}

.switch.is-invalid:focus-visible, .validate .switch:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.switch.is-invalid:checked,
  .switch.is-invalid[checked="true"],
  .switch.is-invalid[aria-checked="true"],
  .validate .switch:invalid:checked,
  .validate .switch:invalid[checked="true"],
  .validate .switch:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}

.validate .label:has(+ * .switch:valid) > *, 
.validate .label-text:has(+ * .switch:valid), 
.validate .label-text:has(~ .switch:valid), 
.validate .label:has(~ .switch:valid) > *, 


.validate .switch:valid ~ .label, 
.validate .switch:valid ~ .label-text, 
.validate .switch:valid ~ .label .label-text,  
.validate *:has(.switch:valid) ~ .label, 
.validate *:has(.switch:valid) ~ .label-text, 
.validate *:has(.switch:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .switch:invalid) > *, 
.validate .label-text:has(+ * .switch:invalid), 
.validate .label-text:has(~ .switch:invalid), 
.validate .label:has(~ .switch:invalid) > *, 

.validate .switch:invalid ~ .label, 
.validate .switch:invalid ~ .label-text, 
.validate .switch:invalid ~ .label .label-text,  
.validate *:has(.switch:invalid) ~ .label, 
.validate *:has(.switch:invalid) ~ .label-text, 
.validate *:has(.switch:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .switch:valid) ~ .success-message,
.validate *:has(> .switch:valid) > * > .success-message,

.validate .switch:valid ~ .success-message,
.validate .switch:valid + * > .success-message {
  display: block;
}

.validate *:has(> .switch:invalid) ~ .error-message,
.validate *:has(> .switch:invalid) > * > .error-message,

.validate .switch:invalid ~ .error-message,
.validate .switch:invalid + * > .error-message {
  display: block;
}

.validate .label:has(+ * .switch-outline:valid) > *, 
.validate .label-text:has(+ * .switch-outline:valid), 
.validate .label-text:has(~ .switch-outline:valid), 
.validate .label:has(~ .switch-outline:valid) > *, 


.validate .switch-outline:valid ~ .label, 
.validate .switch-outline:valid ~ .label-text, 
.validate .switch-outline:valid ~ .label .label-text,  
.validate *:has(.switch-outline:valid) ~ .label, 
.validate *:has(.switch-outline:valid) ~ .label-text, 
.validate *:has(.switch-outline:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .switch-outline:invalid) > *, 
.validate .label-text:has(+ * .switch-outline:invalid), 
.validate .label-text:has(~ .switch-outline:invalid), 
.validate .label:has(~ .switch-outline:invalid) > *, 

.validate .switch-outline:invalid ~ .label, 
.validate .switch-outline:invalid ~ .label-text, 
.validate .switch-outline:invalid ~ .label .label-text,  
.validate *:has(.switch-outline:invalid) ~ .label, 
.validate *:has(.switch-outline:invalid) ~ .label-text, 
.validate *:has(.switch-outline:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.tabs-lifted > .tab:focus-visible {
  border-end-end-radius: 0;
  border-end-start-radius: 0;
}

.tab.tab-active:not([disabled]) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  --tw-text-opacity: 1;
}

.tab:focus,
  .tab:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tab[disabled] {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
  --tw-border-opacity: 0.3;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-text-opacity: 0.4;
}

.tabs-bordered > .tab {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  border-style: solid;
  border-bottom-width: calc(var(--tab-border, 1px) + 1px);
}

.tabs-lifted > .tab {
  border: var(--tab-border, 1px) solid transparent;
  border-width: 0 0 var(--tab-border, 1px) 0;
  border-radius: var(--tab-radius, 0.375rem);
  border-bottom-color: var(--tab-border-color);
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
  padding-top: var(--tab-border, 1px);
}

.tabs-lifted > .tab.tab-active:not([disabled]) {
  background-color: var(--tab-bg);
  border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
  border-color: var(--tab-border-color);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  padding-inline-start: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-inline-end: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-bottom: var(--tab-border, 1px);
  padding-top: 0;
}

.tabs-lifted > .tab.tab-active:not([disabled]):before {
  z-index: 1;
  content: "";
  display: block;
  position: absolute;
  width: calc(100% + var(--tab-radius, 0.375rem) * 2);
  height: var(--tab-radius, 0.375rem);
  bottom: 0;
  background-size: var(--tab-radius, 0.375rem);
  background-position: top left,
        top right;
  background-repeat: no-repeat;
  --tab-grad: calc(69% - var(--tab-border, 1px));
  --radius-start: radial-gradient(
        circle at top left,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
  background-image: var(--radius-start), var(--radius-end);
}

.tabs-lifted > .tab.tab-active:not([disabled]):first-child:before {
  background-image: var(--radius-end);
  background-position: top right;
}

[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):first-child:before {
  background-image: var(--radius-start);
  background-position: top left;
}

.tabs-lifted > .tab.tab-active:not([disabled]):last-child:before {
  background-image: var(--radius-start);
  background-position: top left;
}

[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):last-child:before {
  background-image: var(--radius-end);
  background-position: top right;
}

.table tr.active,
  .table tr.active:nth-child(even),
  .table-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped tr.active,
    .table-striped tr.active:nth-child(even),
    .table-striped-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

textarea {
  background-color: transparent;
}

textarea:focus {
  outline-width: 0px;
  outline-color: transparent;
}

textarea:focus-visible {
  outline: unset;
}

.peer:focus ~ .textarea-floating-label,.peer:focus ~ 
.textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.peer:focus ~ .textarea-floating-label::-moz-placeholder, .peer:focus ~ 
.textarea-filled-label::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.peer:focus ~ .textarea-floating-label::placeholder,.peer:focus ~ 
.textarea-filled-label::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.peer:not(:-moz-placeholder-shown) ~ .textarea-floating-label {
  top: 0px;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:focus ~ .textarea-floating-label,
  .peer:focus-within ~ .textarea-floating-label,
  .peer:not(:placeholder-shown) ~ .textarea-floating-label {
  top: 0px;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:not(:-moz-placeholder-shown) ~ .textarea-filled-label {
  top: 0.25rem;
  margin-inline-start: 1rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:focus ~ .textarea-filled-label,
  .peer:focus-within ~ .textarea-filled-label,
  .peer:not(:placeholder-shown) ~ .textarea-filled-label {
  top: 0.25rem;
  margin-inline-start: 1rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-group .textarea {
  border-width: 0px;
}

.input-group .textarea:focus,
    .input-group .textarea:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.validate .label:has(+ * .textarea:valid) > *, 
.validate .label-text:has(+ * .textarea:valid), 
.validate .label-text:has(~ .textarea:valid), 
.validate .label:has(~ .textarea:valid) > *, 

.validate .textarea:valid ~ .label, 
.validate .textarea:valid ~ .label-text, 
.validate .textarea:valid ~ .label .label-text,  
.validate *:has(.textarea:valid) ~ .label, 
.validate *:has(.textarea:valid) ~ .label-text, 
.validate *:has(.textarea:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .textarea:invalid) > *, 
.validate .label-text:has(+ * .textarea:invalid), 
.validate .label-text:has(~ .textarea:invalid), 
.validate .label:has(~ .textarea:invalid) > *, 

.validate .textarea:invalid ~ .label, 
.validate .textarea:invalid ~ .label-text, 
.validate .textarea:invalid ~ .label .label-text,  
.validate *:has(.textarea:invalid) ~ .label, 
.validate *:has(.textarea:invalid) ~ .label-text, 
.validate *:has(.textarea:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.artboard.phone-1.horizontal,
      .artboard.phone-1.artboard-horizontal {
  width: 568px;
  height: 320px;
}

.artboard.phone-2.horizontal,
      .artboard.phone-2.artboard-horizontal {
  width: 667px;
  height: 375px;
}

.artboard.phone-3.horizontal,
      .artboard.phone-3.artboard-horizontal {
  width: 736px;
  height: 414px;
}

.artboard.phone-4.horizontal,
      .artboard.phone-4.artboard-horizontal {
  width: 812px;
  height: 375px;
}

.artboard.phone-5.horizontal,
      .artboard.phone-5.artboard-horizontal {
  width: 896px;
  height: 414px;
}

.artboard.phone-6.horizontal,
      .artboard.phone-6.artboard-horizontal {
  width: 1024px;
  height: 320px;
}

.btn-sm {
  height: 1.875rem;
  min-height: 1.875rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.btn-lg {
  height: 2.875rem;
  min-height: 2.875rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.btn-block {
  width: 100%;
}

.btn-square:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  padding: 0px;
}

.btn-square:where(.btn-sm) {
  height: 1.875rem;
  width: 1.875rem;
  padding: 0px;
}

.btn-square:where(.btn-lg) {
  height: 2.875rem;
  width: 2.875rem;
  padding: 0px;
}

.btn-circle:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 9999px;
  padding: 0px;
}

.btn-circle:where(.btn-sm) {
  height: 1.875rem;
  width: 1.875rem;
  border-radius: 9999px;
  padding: 0px;
}

.btn-circle:where(.btn-lg) {
  height: 2.875rem;
  width: 2.875rem;
  border-radius: 9999px;
  padding: 0px;
}

.drawer-start {
  inset-inline-start: 0px;
  top: 0px;
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  inset-inline-end: calc(100vw - 23.45rem);
}

.drawer-start:where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.drawer-bottom {
  left: 0px;
  right: 0px;
  bottom: 0px;
  max-height: 15rem;
  max-width: none;
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.input-lg {
  height: 2.875rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.input-filled.input-lg {
  height: 3.5rem;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  position: absolute;
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  position: relative;
}

.modal-middle {
  place-items: center;
}

.tabs-lg :where(.tab) {
  height: 2.875rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  --tab-padding: 1.25rem;
}

.tabs-sm :where(.tab) {
  height: 1.875rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tab-padding: 0.75rem;
}

.tabs-xs :where(.tab) {
  height: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tab-padding: 0.5rem;
}

.avatar.online-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.offline-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.busy-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.away-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.online-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.avatar.offline-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.avatar.busy-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.avatar.away-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.vertical-scrollbar {
  overflow-y: auto;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

.vertical-scrollbar::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.vertical-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.vertical-scrollbar::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.vertical-scrollbar::-webkit-scrollbar {
  width: 0.5rem;
}

.drawer-start,
.drawer-end,
.drawer-top,
.drawer-bottom {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 0px;
  margin-top: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-inline-end: 0.5rem;
}

.menu-horizontal > li > .collapse > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > .collapse > ul) {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 1rem;
  margin-top: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-inline-end: 0px;
}

.tabs-bordered.tabs-vertical > .tab {
  width: 100%;
  justify-content: flex-start;
  border-bottom-width: 0px;
  border-inline-end-width: calc(var(--tab-border, 1px) + 1px);
}

.text-border-primary {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.collapse {
  visibility: collapse;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-left-2 {
  left: -0.5rem;
}

.-top-2 {
  top: -0.5rem;
}

.bottom-0 {
  bottom: 0px;
}

.end-3 {
  inset-inline-end: 0.75rem;
}

.left-0 {
  left: 0px;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.top-1 {
  top: 0.25rem;
}

.top-3 {
  top: 0.75rem;
}

.top-\[0px\] {
  top: 0px;
}

.top-\[55px\] {
  top: 55px;
}

.top-\[85px\] {
  top: 85px;
}

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-50 {
  z-index: 50;
}

.order-1 {
  order: 1;
}

.order-2 {
  order: 2;
}

.order-3 {
  order: 3;
}

.col-span-1 {
  grid-column: span 1 / span 1;
}

.col-span-12 {
  grid-column: span 12 / span 12;
}

.col-span-4 {
  grid-column: span 4 / span 4;
}

.col-span-6 {
  grid-column: span 6 / span 6;
}

.col-span-8 {
  grid-column: span 8 / span 8;
}

.-mx-2 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-3 {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}

.mb-0 {
  margin-bottom: 0px;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mb-15 {
  margin-bottom: 3.75rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.mr-4 {
  margin-right: 1rem;
}

.ms-2 {
  margin-inline-start: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-15 {
  margin-top: 3.75rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-20 {
  margin-top: 5rem;
}

.mt-28 {
  margin-top: 7rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-36 {
  margin-top: 9rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.mt-52 {
  margin-top: 13rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.size-4 {
  width: 1rem;
  height: 1rem;
}

.size-5 {
  width: 1.25rem;
  height: 1.25rem;
}

.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}

.size-7 {
  width: 1.75rem;
  height: 1.75rem;
}

.size-8 {
  width: 2rem;
  height: 2rem;
}

.size-9\.5 {
  width: 2.375rem;
  height: 2.375rem;
}

.h-2 {
  height: 0.5rem;
}

.h-\[100px\] {
  height: 100px;
}

.h-\[23px\] {
  height: 23px;
}

.h-\[50px\] {
  height: 50px;
}

.h-\[60px\] {
  height: 60px;
}

.h-auto {
  height: auto;
}

.h-screen {
  height: 100vh;
}

.max-h-60 {
  max-height: 15rem;
}

.max-h-\[100\%\] {
  max-height: 100%;
}

.w-10 {
  width: 2.5rem;
}

.w-2 {
  width: 0.5rem;
}

.w-\[100px\] {
  width: 100px;
}

.w-\[23px\] {
  width: 23px;
}

.w-\[80px\] {
  width: 80px;
}

.w-full {
  width: 100%;
}

.min-w-52 {
  min-width: 13rem;
}

.max-w-56 {
  max-width: 14rem;
}

.max-w-72 {
  max-width: 18rem;
}

.max-w-lg {
  max-width: 32rem;
}

.max-w-screen-md {
  max-width: 768px;
}

.max-w-screen-sm {
  max-width: 640px;
}

.max-w-screen-xl {
  max-width: 1280px;
}

.max-w-sm {
  max-width: 24rem;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.shrink-0 {
  flex-shrink: 0;
}

.grow {
  flex-grow: 1;
}

.basis-1\/2 {
  flex-basis: 50%;
}

.basis-1\/6 {
  flex-basis: 16.666667%;
}

.basis-2\/6 {
  flex-basis: 33.333333%;
}

.cursor-pointer {
  cursor: pointer;
}

.snap-x {
  scroll-snap-type: x var(--tw-scroll-snap-strictness);
}

.snap-mandatory {
  --tw-scroll-snap-strictness: mandatory;
}

.snap-start {
  scroll-snap-align: start;
}

.snap-center {
  scroll-snap-align: center;
}

.snap-normal {
  scroll-snap-stop: normal;
}

.snap-always {
  scroll-snap-stop: always;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-7 {
  gap: 1.75rem;
}

.gap-x-1 {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-x-5 {
  -moz-column-gap: 1.25rem;
       column-gap: 1.25rem;
}

.gap-y-1 {
  row-gap: 0.25rem;
}

.gap-y-2 {
  row-gap: 0.5rem;
}

.gap-y-3 {
  row-gap: 0.75rem;
}

.gap-y-5 {
  row-gap: 1.25rem;
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-0\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-base-content\/25 > :not([hidden]) ~ :not([hidden]) {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.divide-neutral\/20 > :not([hidden]) ~ :not([hidden]) {
  border-color: var(--fallback-n,oklch(var(--n)/0.2));
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.text-nowrap {
  text-wrap: nowrap;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-e-full {
  border-start-end-radius: 9999px;
  border-end-end-radius: 9999px;
}

.rounded-t-2xl {
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
}

.rounded-t-box {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.border {
  border-width: 1px;
}

.border-0 {
  border-width: 0px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-l {
  border-left-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-base-content\/25 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.border-neutral-100 {
  --tw-border-opacity: 1;
  border-color: rgb(245 245 245 / var(--tw-border-opacity, 1));
}

.border-neutral-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 229 229 / var(--tw-border-opacity, 1));
}

.border-neutral-400 {
  --tw-border-opacity: 1;
  border-color: rgb(163 163 163 / var(--tw-border-opacity, 1));
}

.border-red-200 {
  --tw-border-opacity: 1;
  border-color: rgb(254 202 202 / var(--tw-border-opacity, 1));
}

.bg-\[\#ba28ba\] {
  --tw-bg-opacity: 1;
  background-color: rgb(186 40 186 / var(--tw-bg-opacity, 1));
}

.bg-\[\#dd4b39\]\/15 {
  background-color: rgb(221 75 57 / 0.15);
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.bg-base-200\/60 {
  background-color: var(--fallback-b2,oklch(var(--b2)/0.6));
}

.bg-blue-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity, 1));
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity, 1));
}

.bg-neutral-100\/50 {
  background-color: rgb(245 245 245 / 0.5);
}

.bg-neutral-500\/80 {
  background-color: rgb(115 115 115 / 0.8);
}

.bg-primary\/10 {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}

.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-0 {
  padding: 0px;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.p-5 {
  padding: 1.25rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-\[6px\] {
  padding-left: 6px;
  padding-right: 6px;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.pb-0 {
  padding-bottom: 0px;
}

.pb-2 {
  padding-bottom: 0.5rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pr-0 {
  padding-right: 0px;
}

.pt-0 {
  padding-top: 0px;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-3 {
  padding-top: 0.75rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-7 {
  padding-top: 1.75rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-start {
  text-align: start;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-base {
  font-size: 14px;
  line-height: 24px;
}

.text-lg {
  font-size: 20px;
  line-height: 28px;
}

.text-sm {
  font-size: 11px;
  line-height: 20px;
}

.text-sm\/6 {
  font-size: 11px;
  line-height: 1.5rem;
}

.text-xl {
  font-size: 24px;
  line-height: 32px;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-xs\/6 {
  font-size: 0.75rem;
  line-height: 1.5rem;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.text-\[\#2b3137\] {
  --tw-text-opacity: 1;
  color: rgb(43 49 55 / var(--tw-text-opacity, 1));
}

.text-\[\#dd4b39\] {
  --tw-text-opacity: 1;
  color: rgb(221 75 57 / var(--tw-text-opacity, 1));
}

.text-base-content\/50 {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.text-base-content\/80 {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.text-base-content\/90 {
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}

.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}

.text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
}

.text-neutral-400 {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity, 1));
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity, 1));
}

.text-neutral-600 {
  --tw-text-opacity: 1;
  color: rgb(82 82 82 / var(--tw-text-opacity, 1));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity, 1));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.no-underline {
  text-decoration-line: none;
}

.shadow-\[0_3px_10px_rgb\(0\2c 0\2c 0\2c 0\.2\)\] {
  --tw-shadow: 0 3px 10px rgb(0,0,0,0.2);
  --tw-shadow-colored: 0 3px 10px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-\[height\] {
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-100 {
  transition-duration: 100ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-75 {
  transition-duration: 75ms;
}

input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.\[--auto-close\:inside\] {
  --auto-close: inside;
}

.\[--offset\:8\] {
  --offset: 8;
}

.\[--placement\:bottom-end\] {
  --placement: bottom-end;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-Thin.woff2") format("woff2");

  font-weight: 100;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-ExtraLight.woff2")
    format("woff2");

  font-weight: 200;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-Light.woff2") format("woff2");

  font-weight: 300;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-Regular.woff2")
    format("woff2");

  font-weight: 400;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-Medium.woff2")
    format("woff2");

  font-weight: 500;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-SemiBold.woff2")
    format("woff2");

  font-weight: 600;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-Bold.woff2") format("woff2");

  font-weight: 700;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-ExtraBold.woff2")
    format("woff2");

  font-weight: 800;

  font-style: normal;

  font-display: swap;
}

@font-face {
  font-family: "Vazirmatn";

  src: url("style/fonts/vazir/webfonts/Vazirmatn-Black.woff2") format("woff2");

  font-weight: 900;

  font-style: normal;

  font-display: swap;
}

.fa_number {
  font-feature-settings: "ss01";
}

.st_number {
  font-feature-settings: "ss01", "tnum";
}

.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.bbb * {
  border: solid 1px #000000;
}

.my-bbb {
  border: solid 1px #000000;
}

.my-ellipsis-1 {
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.my-ellipsis-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.icon-\[tabler--toman\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns:xlink='http://www.w3.org/1999/xlink' xmlns='http://www.w3.org/2000/svg' style='width: 18px; height: 18px; fill: var(--color-icon-high-emphasis);' width='14' height='14'%3E%3Cdefs%3E%3Csymbol id='toman' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14 14'%3E%3Cpath fill-rule='evenodd' d='M3.057 1.742L3.821 1l.78.75-.776.741-.768-.749zm3.23 2.48c0 .622-.16 1.111-.478 1.467-.201.221-.462.39-.783.505a3.251 3.251 0 01-1.083.163h-.555c-.421 0-.801-.074-1.139-.223a2.045 2.045 0 01-.9-.738A2.238 2.238 0 011 4.148c0-.059.001-.117.004-.176.03-.55.204-1.158.525-1.827l1.095.484c-.257.532-.397 1-.419 1.403-.002.04-.004.08-.004.12 0 .252.055.458.166.618a.887.887 0 00.5.354c.085.028.178.048.278.06.079.01.16.014.243.014h.555c.458 0 .769-.081.933-.244.14-.139.21-.383.21-.731V2.02h1.2v2.202zm5.433 3.184l-.72-.7.709-.706.735.707-.724.7zm-2.856.308c.542 0 .973.19 1.293.569.297.346.445.777.445 1.293v.364h.18v-.004h.41c.221 0 .377-.028.467-.084.093-.055.14-.14.14-.258v-.069c.004-.243.017-1.044 0-1.115L13 8.05v1.574a1.4 1.4 0 01-.287.863c-.306.405-.804.607-1.495.607h-.627c-.061.733-.434 1.257-1.117 1.573-.267.122-.58.21-.937.265a5.845 5.845 0 01-.914.067v-1.159c.612 0 1.072-.082 1.38-.247.25-.132.376-.298.376-.499h-.515c-.436 0-.807-.113-1.113-.339-.367-.273-.55-.667-.55-1.18 0-.488.122-.901.367-1.24.296-.415.728-.622 1.296-.622zm.533 2.226v-.364c0-.217-.048-.389-.143-.516a.464.464 0 00-.39-.187.478.478 0 00-.396.187.705.705 0 00-.136.449.65.65 0 00.003.067c.008.125.066.22.177.283.093.054.21.08.352.08h.533zM9.5 6.707l.72.7.724-.7L10.209 6l-.709.707zm-6.694 4.888h.03c.433-.01.745-.106.937-.29.024.012.065.035.12.068l.074.039.081.042c.135.073.261.133.379.18.345.146.67.22.977.22a1.216 1.216 0 00.87-.34c.3-.285.449-.714.449-1.286a2.19 2.19 0 00-.335-1.145c-.299-.457-.732-.685-1.3-.685-.502 0-.916.192-1.242.575-.113.132-.21.284-.294.456-.032.062-.06.125-.084.191a.504.504 0 00-.03.078 1.67 1.67 0 00-.022.06c-.103.309-.171.485-.205.53-.072.09-.214.14-.427.147-.123-.005-.209-.03-.256-.076-.057-.054-.085-.153-.085-.297V7l-1.201-.5v3.562c0 .261.048.496.143.703.071.158.168.296.29.413.123.118.266.211.43.28.198.084.42.13.665.136v.001h.036zm2.752-1.014a.778.778 0 00.044-.353.868.868 0 00-.165-.47c-.1-.134-.217-.201-.35-.201-.18 0-.33.103-.447.31-.042.071-.08.158-.114.262a2.434 2.434 0 00-.04.12l-.015.053-.015.046c.142.118.323.216.544.293.18.062.325.092.433.092.044 0 .086-.05.125-.152z' clip-rule='evenodd'%3E%3C/path%3E%3C/symbol%3E%3C/defs%3E%3Cuse xlink:href='%23toman'%3E%3C/use%3E%3C/svg%3E%0A");
}

.scroll-effect {
  animation: moveUp linear;
  animation-timeline: scroll();
}

@keyframes moveUp {
  0%,
  10% {
    /* top: 25px; */
    transform: translateY(0px);
  }

  10%,
  30% {
    /* top: 25px; */
    transform: translateY(-25px);
  }

  30%,
  100% {
    /* top: 0px; */
    transform: translateY(-25px);
  }
}

.aria-\[current\=\'page\'\]\:text-border-primary[aria-current='page'] {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

@media (min-width: 1024px) {
  .lg\:drawer-start {
    inset-inline-start: 0px;
    top: 0px;
    --tw-translate-x: -100%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    inset-inline-end: calc(100vw - 23.45rem);
  }

  .lg\:drawer-start:where([dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: 100%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .lg\:drawer-start {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: all;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@media (min-width: 1280px) {
  .xl\:container {
    width: 100%;
  }

  @media (min-width: 640px) {
    .xl\:container {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .xl\:container {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .xl\:container {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .xl\:container {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .xl\:container {
      max-width: 1536px;
    }
  }
}

.hover\:border-\[\#dd4b39\]:hover {
  --tw-border-opacity: 1;
  border-color: rgb(221 75 57 / var(--tw-border-opacity, 1));
}

.hover\:border-neutral-400:hover {
  --tw-border-opacity: 1;
  border-color: rgb(163 163 163 / var(--tw-border-opacity, 1));
}

.hover\:bg-\[\#dd4b39\]\/25:hover {
  background-color: rgb(221 75 57 / 0.25);
}

.hover\:bg-\[\#ffffff\]\/10:hover {
  background-color: rgb(255 255 255 / 0.1);
}

.hover\:bg-primary\/20:hover {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
}

.hover\:bg-white:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.hover\:text-blue-400:hover {
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity, 1));
}

.hover\:text-neutral-900:hover {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity, 1));
}

.hover\:text-primary:hover {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.hover\:text-red-600:hover {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}

.group:hover .group-hover\:bg-\[\#f03434\]\/10 {
  background-color: rgb(240 52 52 / 0.1);
}

.group:hover .group-hover\:text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity, 1));
}

.group.active .group-\[\.active\]\:flex {
  display: flex;
}

.group.is-active .group-\[\.is-active\]\:grid {
  display: grid;
}

.group.is-active .group-\[\.is-active\]\:hidden {
  display: none;
}

.group.active .group-\[\.active\]\:text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.group.is-active .group-\[\.is-active\]\:text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity, 1));
}

.aria-\[current\=\'page\'\]\:bg-primary\/10[aria-current='page'] {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.dropdown.open > .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown.open > .dropdown-toggle .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown.open > .dropdown-menu > .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown-menu.open.dropdown-open\:opacity-100 {
  opacity: 1;
}

.accordion-item.active.accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active.accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.accordion-item.active > .accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active > .accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.accordion-item.active > .accordion-toggle .accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active > .accordion-toggle .accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.accordion-item.active > .accordion-heading > .accordion-toggle .accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active > .accordion-heading > .accordion-toggle .accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.accordion-item.active > .accordion-toggle.accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active > .accordion-toggle.accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.accordion-item.active > .accordion-heading > .accordion-toggle.accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active > .accordion-heading > .accordion-toggle.accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.accordion-item.active .accordion-item-force-active.accordion-item-active\:hidden {
  display: none;
}

.accordion-item.active .accordion-item-force-active.accordion-item-active\:-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse.open > .collapse-open\:block {
  display: block;
}

.collapse.open > .collapse-open\:hidden {
  display: none;
}

.collapse.open > .collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse.open.collapse-open\:block {
  display: block;
}

.collapse.open.collapse-open\:hidden {
  display: none;
}

.collapse.open.collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse-toggle.open > .collapse-open\:block {
  display: block;
}

.collapse-toggle.open > .collapse-open\:hidden {
  display: none;
}

.collapse-toggle.open > .collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse-toggle.open.collapse-open\:block {
  display: block;
}

.collapse-toggle.open.collapse-open\:hidden {
  display: none;
}

.collapse-toggle.open.collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

[data-tab].active.active-tab\:bg-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

[data-tab].active.active-tab\:text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

[data-tab].active .active-tab\:bg-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

[data-tab].active .active-tab\:text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.open.overlay-open\:translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.open.overlay-open\:translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.open.overlay-open\:opacity-100 {
  opacity: 1;
}

.open .overlay-open\:translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.open .overlay-open\:translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.open .overlay-open\:opacity-100 {
  opacity: 1;
}

@media not all and (min-width: 1024px) {
  .max-lg\:flex {
    display: flex;
  }

  .max-lg\:hidden {
    display: none;
  }
}

@media not all and (min-width: 640px) {
  .max-sm\:hidden {
    display: none;
  }

  .max-sm\:border-l-0 {
    border-left-width: 0px;
  }
}

@media (min-width: 640px) {
  .sm\:inline {
    display: inline;
  }
}

@media (min-width: 768px) {
  .md\:fixed {
    position: fixed;
  }

  .md\:col-span-6 {
    grid-column: span 6 / span 6;
  }

  .md\:col-span-8 {
    grid-column: span 8 / span 8;
  }

  .md\:col-start-3 {
    grid-column-start: 3;
  }

  .md\:mb-10 {
    margin-bottom: 2.5rem;
  }

  .md\:px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }

  .md\:text-base {
    font-size: 14px;
    line-height: 24px;
  }

  .md\:text-lg {
    font-size: 20px;
    line-height: 28px;
  }

  .md\:font-normal {
    font-weight: 400;
  }
}

@media (min-width: 1024px) {
  .lg\:static {
    position: static;
  }

  .lg\:relative {
    position: relative;
  }

  .lg\:order-1 {
    order: 1;
  }

  .lg\:order-2 {
    order: 2;
  }

  .lg\:col-span-4 {
    grid-column: span 4 / span 4;
  }

  .lg\:col-span-5 {
    grid-column: span 5 / span 5;
  }

  .lg\:col-span-7 {
    grid-column: span 7 / span 7;
  }

  .lg\:col-span-8 {
    grid-column: span 8 / span 8;
  }

  .lg\:my-5 {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
  }

  .lg\:mb-10 {
    margin-bottom: 2.5rem;
  }

  .lg\:mb-5 {
    margin-bottom: 1.25rem;
  }

  .lg\:mt-0 {
    margin-top: 0px;
  }

  .lg\:mt-15 {
    margin-top: 3.75rem;
  }

  .lg\:mt-20 {
    margin-top: 5rem;
  }

  .lg\:block {
    display: block;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:grid {
    display: grid;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:w-auto {
    width: auto;
  }

  .lg\:grow-0 {
    flex-grow: 0;
  }

  .lg\:basis-1\/3 {
    flex-basis: 33.333333%;
  }

  .lg\:basis-2\/3 {
    flex-basis: 66.666667%;
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:justify-start {
    justify-content: flex-start;
  }

  .lg\:justify-end {
    justify-content: flex-end;
  }

  .lg\:gap-10 {
    gap: 2.5rem;
  }

  .lg\:gap-3 {
    gap: 0.75rem;
  }

  .lg\:gap-5 {
    gap: 1.25rem;
  }

  .lg\:border-b-0 {
    border-bottom-width: 0px;
  }

  .lg\:p-5 {
    padding: 1.25rem;
  }

  .lg\:pb-2 {
    padding-bottom: 0.5rem;
  }

  .lg\:pr-2 {
    padding-right: 0.5rem;
  }

  .lg\:pt-4 {
    padding-top: 1rem;
  }

  .lg\:pt-5 {
    padding-top: 1.25rem;
  }

  .lg\:text-left {
    text-align: left;
  }

  .lg\:text-\[24px\] {
    font-size: 24px;
  }

  .lg\:text-base {
    font-size: 14px;
    line-height: 24px;
  }

  .lg\:text-lg {
    font-size: 20px;
    line-height: 28px;
  }

  .lg\:font-normal {
    font-weight: 400;
  }

  .lg\:hover\:shadow-\[0px_0px_10px_3px_rgba\(0\2c _0\2c _0\2c _0\.1\)\]:hover {
    --tw-shadow: 0px 0px 10px 3px rgba(0, 0, 0, 0.1);
    --tw-shadow-colored: 0px 0px 10px 3px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (min-width: 1280px) {
  .xl\:col-span-3 {
    grid-column: span 3 / span 3;
  }

  .xl\:col-span-4 {
    grid-column: span 4 / span 4;
  }

  .xl\:col-span-8 {
    grid-column: span 8 / span 8;
  }

  .xl\:col-span-9 {
    grid-column: span 9 / span 9;
  }

  .xl\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
}

.rtl\:-rotate-180:where([dir="rtl"], [dir="rtl"] *) {
  --tw-rotate: -180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rtl\:-rotate-\[0deg\]:where([dir="rtl"], [dir="rtl"] *) {
  --tw-rotate: -0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rtl\:space-x-reverse:where([dir="rtl"], [dir="rtl"] *) > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

.\[\&\:nth-child\(2n\)\]\:border-l-0:nth-child(2n) {
  border-left-width: 0px;
}

@media (min-width: 1280px) {
  .xl\:\[\&\:nth-child\(2n\)\]\:border-l:nth-child(2n) {
    border-left-width: 1px;
  }

  .xl\:\[\&\:nth-child\(4n\)\]\:border-l-0:nth-child(4n) {
    border-left-width: 0px;
  }
}

.\[\&_\.nested-collapse-wrapper\]\:space-y-0\.5 .nested-collapse-wrapper > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.\[\&_ul\]\:space-y-0\.5 ul > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}
